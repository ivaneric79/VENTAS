// --------------------------------------------------------------------------
// Archivo del Proyecto Ventas
// Página del proyecto: http://sourceforge.net/projects/ventas
// --------------------------------------------------------------------------
// Este archivo puede ser distribuido y/o modificado bajo lo terminos de la
// Licencia Pública General versión 2 como es publicada por la Free Software
// Fundation, Inc.
// --------------------------------------------------------------------------

unit empresa;

interface

uses
  SysUtils, Types, Classes, QGraphics, QControls, QForms, QDialogs,
  QStdCtrls, QButtons, QExtCtrls, IniFiles, DB;

type
  TfrmEmpresa = class(TForm)
    grpProveed: TGroupBox;
    Label2: TLabel;
    Label4: TLabel;
    txtNombre: TEdit;
    txtRFC: TEdit;
    btnCancelar: TBitBtn;
    btnAplicar: TBitBtn;
    grpDomicilio: TGroupBox;
    Label16: TLabel;
    Label21: TLabel;
    Label22: TLabel;
    Label23: TLabel;
    Label24: TLabel;
    txtCalle: TEdit;
    txtColonia: TEdit;
    txtLocalidad: TEdit;
    txtEstado: TEdit;
    txtCp: TEdit;
    Label34: TLabel;
    txtTelefono: TEdit;
    Label35: TLabel;
    txtFax: TEdit;
    Label36: TLabel;
    txtCorreo: TEdit;
    Label1: TLabel;
    txtPagina: TEdit;
    dlgAbrir: TOpenDialog;
    grpLogo: TGroupBox;
    Label3: TLabel;
    txtRutaLogo: TEdit;
    btnDir: TBitBtn;
    pnlLogo: TPanel;
    imgLogo: TImage;
    Label5: TLabel;
    btnAceptar: TBitBtn;
    procedure btnAplicarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Salta(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure btnDirClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormCreate(Sender: TObject);
  private
    procedure RecuperaConfig;
    procedure GuardaDatos;
    procedure LimpiaDatos;
  public
    sNombre : String;
    bCambios : boolean;
  end;

var
  frmEmpresa: TfrmEmpresa;

implementation

uses dm;

{$R *.xfm}

procedure TfrmEmpresa.btnAplicarClick(Sender: TObject);
begin
    if(Length(txtNombre.Text) > 0) then begin
        GuardaDatos;
        sNombre := txtNombre.Text;
        bCambios := True;
        if ((Sender as TBitBtn).Name = 'btnAceptar') then
            Close;        
    end
    else
        Application.MessageBox('Introduce el nombre de la empresa','Error',[smbOK],smsCritical);
end;

procedure TfrmEmpresa.GuardaDatos;
begin
    with dmDatos.qryModifica do begin
        Close;
        SQL.Clear;
        SQL.Add('SELECT rfc FROM empresa');
        Open;

        if(EOF) then begin
            Close;
            SQL.Clear;
            SQL.Add('INSERT INTO empresa (rfc,nombre,calle,');
            SQL.Add('colonia, localidad, estado, cp, telefono, fax,');
            SQL.Add('correoe,paginaweb, fecha) VALUES(');
            SQL.Add('''' + txtRfc.Text + ''',''' + txtNombre.Text + ''',');
            SQL.Add('''' + txtCalle.Text + ''',''' + txtColonia.Text + ''',');
            SQL.Add('''' + txtLocalidad.Text + ''',''' + txtEstado.Text + ''',');
            SQL.Add('''' + txtCp.Text + ''',''' + txtTelefono.Text + ''',');
            SQL.Add('''' + txtFax.Text + ''',''' + txtCorreo.Text + ''',');
            SQL.Add('''' + txtPagina.Text + ''',');
            SQL.Add(''''+ FormatDateTime('mm/dd/yyyy hh:nn:ss',Now)+ ''')');
        end
        else begin
            Close;
            SQL.Clear;
            SQL.Add('UPDATE empresa SET ');
            SQL.Add('rfc = ''' + txtRfc.Text + ''',');
            SQL.Add('nombre = ''' + txtNombre.Text + ''',');
            SQL.Add('calle = ''' + txtCalle.Text + ''',');
            SQL.Add('colonia = ''' + txtColonia.Text + ''',');
            SQL.Add('localidad = ''' + txtLocalidad.Text + ''',');
            SQL.Add('estado = ''' + txtEstado.Text + ''',');
            SQL.Add('cp = ''' + txtCp.Text + ''',');
            SQL.Add('telefono = ''' + txtTelefono.Text + ''',');
            SQL.Add('fax = ''' + txtFax.Text + ''',');
            SQL.Add('correoe = ''' + txtCorreo.Text + ''',');
            SQL.Add('paginaweb = ''' + txtPagina.Text + ''',');
            SQL.Add('fecha = ''' + FormatDateTime('mm/dd/yyyy hh:nn:ss',Now) + '''');
        end;
        ExecSQL;

        if(FileExists(txtRutaLogo.Text)) then begin
            Close;
            SQL.Clear;
            SQL.Add('UPDATE empresa SET logo = :blbLogo');
            ParamByName('blbLogo').LoadFromFile(txtRutaLogo.Text, ftGraphic);
            ExecSQL;
        end;
    end;
end;

procedure TfrmEmpresa.FormShow(Sender: TObject);
var
    fldCampo : TField;
    stStream : TStream;
begin
    bCambios := False;
    LimpiaDatos;
    with dmDatos.qryModifica do begin
        Close;
        SQL.Clear;
        SQL.Add('SELECT * FROM empresa');
        Open;

        fldCampo := FieldByName('logo');
        stStream := CreateBlobStream(fldCampo, bmRead);
        imgLogo.Picture.Bitmap.LoadFromStream(stStream);

        txtRfc.Text := Trim(FieldByName('rfc').AsString);
        txtNombre.Text := Trim(FieldByName('nombre').AsString);
        txtCalle.Text := Trim(FieldByName('calle').AsString);
        txtColonia.Text := Trim(FieldByName('colonia').AsString);
        txtLocalidad.Text := Trim(FieldByName('localidad').AsString);
        txtEstado.Text := Trim(FieldByName('estado').AsString);
        txtCp.Text := Trim(FieldByName('cp').AsString);
        txtTelefono.Text := Trim(FieldByName('telefono').AsString);
        txtFax.Text := Trim(FieldByName('fax').AsString);
        txtCorreo.Text := Trim(FieldByName('correoe').AsString);
        txtPagina.Text := Trim(FieldByName('paginaweb').AsString);
        Close;
    end;
end;

procedure TfrmEmpresa.LimpiaDatos;
begin
    txtRfc.Clear;
    txtNombre.Clear;
    txtCalle.Clear;
    txtColonia.Clear;
    txtLocalidad.Clear;
    txtEstado.Clear;
    txtCp.Clear;
    txtTelefono.Clear;
    txtFax.Clear;
    txtCorreo.Clear;
    txtPagina.Clear;
    txtRutalogo.Clear;
end;

procedure TfrmEmpresa.Salta(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
    {Inicio (36), Fin (35), Izquierda (37), derecha (39), arriba (38), abajo (40)}
    if(Key >= 30) and (Key <= 122) and (Key <> 35) and (Key <> 36) and not ((Key >= 37) and (Key <= 40)) then
        if( Length((Sender as TEdit).Text) = (Sender as TEdit).MaxLength) then
            SelectNext(Sender as TWidgetControl, true, true);
end;

procedure TfrmEmpresa.btnDirClick(Sender: TObject);
begin
    if(dlgAbrir.Execute) then begin
        txtRutaLogo.Text := dlgAbrir.FileName;
        imgLogo.Picture.LoadFromFile(dlgAbrir.FileName);
    end;
end;

procedure TfrmEmpresa.RecuperaConfig;
var
    iniArchivo : TIniFile;
    sIzq, sArriba : String;
begin
    iniArchivo := TIniFile.Create(ExtractFilePath(Application.ExeName) + 'config.ini');

    with iniArchivo do begin
        //Recupera la posición Y de la ventana
        sArriba := ReadString('Empresa', 'Posy', '');

        //Recupera la posición X de la ventana
        sIzq := ReadString('Empresa', 'Posx', '');

        if (Length(sIzq) > 0) and (Length(sArriba) > 0) then begin
            Left := StrToInt(sIzq);
            Top := StrToInt(sArriba);
        end;

        Free;
    end;
end;

procedure TfrmEmpresa.FormClose(Sender: TObject; var Action: TCloseAction);
var
    iniArchivo : TIniFile;
begin
    iniArchivo := TIniFile.Create(ExtractFilePath(Application.ExeName) + 'config.ini');

    with iniArchivo do begin
        // Registra la posición y de la ventana
        WriteString('Empresa', 'Posy', IntToStr(Top));

        // Registra la posición X de la ventana
        WriteString('Empresa', 'Posx', IntToStr(Left));

        // Registra la ruta del logo de la empresa
        WriteString('Empresa', 'RutaLogo', txtRutaLogo.Text);

        Free;
    end;
end;

procedure TfrmEmpresa.FormCreate(Sender: TObject);
begin
    RecuperaConfig;
end;

end.
